= 0.8.0

* Raise an exception when calling order with something that isn't :asc or
:desc

* Use hanna for spiffy rdocs.

* Raise an exception when attempting to add a named filter to a class if there
is already an existing filter with the same name.

* Documentation. 

* Refactored the custom DSL subclass creation code into a DSLFactory class.

* Added a (fairly simple) performance test.

* Get source_type option working for has_many.

* Correct hard-coded primary key columns.

= 0.6.0

* 100% test coverage. That's right, 100%.

* Added fixes for various options on AR associations.

* Support calling named filters from within joins in filters.

* Stop using _inheritable_attribute for accessing the named filters and just recurse for
them.

* Change the tests for named filters to use anonymous classes so that we're
sure we're starting from a blank slate.

* Make the API work correctly for anonymous classes.

* Correctly handle the case where nil or [] is passed as an argument to the IN
restriction.

* Added is_not_null as a nicer version of is_null.not

= 0.2.0 

* Changed the available join types to inner, left and right.

* Fix a bug where we used the wrong type in polymorphic association joins.

* Use with_scope when chaining filters, named_filters, and AR associations in
order to keep the filter data instead of passing the query parameters directly
and combining them in order to make this work correctly with AR.

* Fix a bug when calling .filter in a chain of associations and named filters.

* Don't include conditions unless there are actually conditions specified.

* Fix a bug where the first and last methods would fail.

* Delegate array methods through to the result of the filter.

* Add proxy_options to mimic the API of named_scope for getting the options
that result from a given query.

* Support chaining with AR associations... (i.e. Blog.posts.published)

* Support has_many and has_one :through

= 0.1.4

* Join on both the id and type for polymorphic joins.

* Fix a bug where we were using the incorrect table names in joins and
ordering with joins.

* Change != to the SQL standard <>.

* Fix invalid SQL generated by not_all and not_any.

* Detect count/size/length queries and do the appropriate distinct clause for
those count queries.

* Do DISTINCT searches for queries that involve specific types of joins.

* Allow passing a join type as the first argument to having.

* Restructured the explicit join API

* Raise exceptions when doing an explicit join using columns that don't exist.

* Allow explicit joins on values: left_join(:class_name, :table_alias, :rcol
=> 'Post'...)

* Added a filter_class method to the DSL for getting the class that is being
filtered.

* Added custom join feature: left_join(:table_name, :table_alias, :rcol =>
:lcol...)

* Changed custom exceptions to subclass StandardError and not crash the entire
app when throwing one (thanks RailsEnvy).

= 0.1.3

* Fixed a bug in filter.rb when trying to chain to named_scopes or things that
are otherwise not named_filters.

* Made a named_filters accessor for getting the list of filters that apply to
a particular class.

* Added none_of and not_all_of conjunctions.

* Changed the between restriction to take either a range, a tuple, or two
values.

* Support multiple joins in one having statement through having(:posts =>
:comments)

* Added a CHANGELOG

= 0.1.2

* Add LIKE and NOT LIKE restrictions

* Replace active record objects with their ids if passed as the value for a
resriction.

= 0.1.1

* Add group_by

* Raise informative exceptions when columns or associations are not found for
a given filter

* Alias is_null restriction to nil and null

* Alias comparison restrictions to gt, lt, lte, gte

* Add greater_than_or_equal_to and less_than_or_equal_to restrictions.

